spring:
  application:
    name: agenticcp-core

  profiles:
    active: local
  
  datasource:
    url: jdbc:mysql://localhost:3306/agenticcp?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: agenticcp
    password: agenticcppassword
    driver-class-name: com.mysql.cj.jdbc.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    open-in-view: false
    
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

app:
  redis:
    enabled: false


security:
  jwt:
    # base64 인코딩된 256비트 이상 키를 사용하세요. 예시는 개발용입니다.
    secret: ${JWT_SECRET:ZmFrZV9zZWNyZXRfZm9yX2Rldl9vbmx5X3VzZV9jaGFuZ2VfbWU=}
    access-token-expiration-ms: ${JWT_ACCESS_EXP_MS:3600000}
    refresh-token-expiration-ms: ${JWT_REFRESH_EXP_MS:604800000}

logging:
  mdc:
    enabled-keys: ["requestId", "tenantId", "clientIp"]
    request-id-type: "uuid"
    request-id-prefix: "req_"
    request-id-length: 8
    mask-client-ip: false
    mask-user-agent: false

server:
  port: 8080
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://mysql:3306/agenticcp?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: agenticcp
    password: agenticcppassword

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/agenticcp}
    username: ${DATABASE_USERNAME:agenticcp}
    password: ${DATABASE_PASSWORD:agenticcppassword}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false